ARG seed 0
ARG numthreads 2
ARG program yield.s
ARG interrupt frequency 50
ARG interrupt randomness False
ARG procsched 001
ARG argv bx=2,bx=2
ARG load address 1000
ARG memsize 128
ARG memtrace mutex,count
ARG regtrace ax,bx
ARG cctrace False
ARG printstats False
ARG verbose False


mutex count      ax    bx          Thread 0                Thread 1         

    0     0       0     2   
    0     0       1     2   1000 mov  $1, %ax
    1     0       0     2   1001 xchg %ax, mutex
    1     0       0     2   ------ Interrupt ------  ------ Interrupt ------  
    1     0       1     2                            1000 mov  $1, %ax
    1     0       0     2   ------ Interrupt ------  ------ Interrupt ------  
    1     0       0     2   1002 test $0, %ax
    1     0       0     2   1003 je .acquire_done
    1     0       1     2   ------ Interrupt ------  ------ Interrupt ------  
    1     0       1     2                            1001 xchg %ax, mutex
    1     0       0     2   ------ Interrupt ------  ------ Interrupt ------  
    1     0       0     2   1006 mov  count, %ax
    1     0       1     2   1007 add  $1, %ax
    1     0       1     2   ------ Interrupt ------  ------ Interrupt ------  
    1     0       1     2                            1002 test $0, %ax
    1     0       1     2   ------ Interrupt ------  ------ Interrupt ------  
    1     1       1     2   1008 mov  %ax, count
    0     1       1     2   1009 mov  $0, mutex
    0     1       1     2   ------ Interrupt ------  ------ Interrupt ------  
    0     1       1     2                            1003 je .acquire_done
    0     1       1     2   ------ Interrupt ------  ------ Interrupt ------  
    0     1       1     1   1010 sub  $1, %bx
    0     1       1     1   1011 test $0, %bx
    0     1       1     2   ------ Interrupt ------  ------ Interrupt ------  
    0     1       1     2                            1004 yield
    0     1       1     1   ------ Interrupt ------  ------ Interrupt ------  
    0     1       1     1   1012 jgt .top
    0     1       1     1   1000 mov  $1, %ax
    0     1       1     2   ------ Interrupt ------  ------ Interrupt ------  
    0     1       1     2                            1005 j .acquire
    0     1       1     1   ------ Interrupt ------  ------ Interrupt ------  
    1     1       0     1   1001 xchg %ax, mutex
    1     1       0     1   1002 test $0, %ax
    1     1       1     2   ------ Interrupt ------  ------ Interrupt ------  
    1     1       1     2                            1000 mov  $1, %ax
    1     1       0     1   ------ Interrupt ------  ------ Interrupt ------  
    1     1       0     1   1003 je .acquire_done
    1     1       1     1   1006 mov  count, %ax
    1     1       1     2   ------ Interrupt ------  ------ Interrupt ------  
    1     1       1     2                            1001 xchg %ax, mutex
    1     1       1     1   ------ Interrupt ------  ------ Interrupt ------  
    1     1       2     1   1007 add  $1, %ax
    1     2       2     1   1008 mov  %ax, count
    1     2       1     2   ------ Interrupt ------  ------ Interrupt ------  
    1     2       1     2                            1002 test $0, %ax
    1     2       2     1   ------ Interrupt ------  ------ Interrupt ------  
    0     2       2     1   1009 mov  $0, mutex
    0     2       2     0   1010 sub  $1, %bx
    0     2       1     2   ------ Interrupt ------  ------ Interrupt ------  
    0     2       1     2                            1003 je .acquire_done
    0     2       2     0   ------ Interrupt ------  ------ Interrupt ------  
    0     2       2     0   1011 test $0, %bx
    0     2       2     0   1012 jgt .top
    0     2       1     2   ------ Interrupt ------  ------ Interrupt ------  
    0     2       1     2                            1004 yield
    0     2       2     0   ------ Interrupt ------  ------ Interrupt ------  
    0     2       2     0   1013 halt
    0     2       1     2   ----- Halt;Switch -----  ----- Halt;Switch -----  
    0     2       1     2                            1005 j .acquire
    0     2       1     2                            1000 mov  $1, %ax
    1     2       0     2                            1001 xchg %ax, mutex
    1     2       0     2                            1002 test $0, %ax
    1     2       0     2                            1003 je .acquire_done
    1     2       2     2                            1006 mov  count, %ax
    1     2       3     2                            1007 add  $1, %ax
    1     3       3     2                            1008 mov  %ax, count
    0     3       3     2                            1009 mov  $0, mutex
    0     3       3     1                            1010 sub  $1, %bx
    0     3       3     1                            1011 test $0, %bx
    0     3       3     1                            1012 jgt .top
    0     3       1     1                            1000 mov  $1, %ax
    1     3       0     1                            1001 xchg %ax, mutex
    1     3       0     1                            1002 test $0, %ax
    1     3       0     1                            1003 je .acquire_done
    1     3       3     1                            1006 mov  count, %ax
    1     3       4     1                            1007 add  $1, %ax
    1     4       4     1                            1008 mov  %ax, count
    0     4       4     1                            1009 mov  $0, mutex
    0     4       4     0                            1010 sub  $1, %bx
    0     4       4     0                            1011 test $0, %bx
    0     4       4     0                            1012 jgt .top
    0     4       4     0                            1013 halt
